name: Build, Push, and Deploy

on:
  push:
    branches: [master]

env:
  AWS_REGION: us-east-2
  BASE_ECR_URL_BACKEND: 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-backend
  BASE_ECR_URL_FRONTEND: 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-frontend
  APP_ID: 715841365404

jobs:
  application:
    name: DocuShare Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  deploy-to-public-ec2:
    name: Deploy to EC2 (Public)
    runs-on: ubuntu-latest
    needs: application
    steps:
      - name: SSH and deploy both containers
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 18.118.144.229
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Check and install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ec2-user
              newgrp docker
              echo "Docker installed successfully."
            else
              echo "Docker is already installed."
            fi

            # Pull the Docker images from ECR
            FRONTEND_IMAGE=${{ env.BASE_ECR_URL_FRONTEND }}:latest
            BACKEND_IMAGE=${{ env.BASE_ECR_URL_BACKEND }}:latest

            echo "Logging into ECR..."
            aws ecr get-login-password --region us-east-2 | sudo docker login --username AWS --password-stdin ${{ env.BASE_ECR_URL_FRONTEND }}

            echo "Pulling frontend and backend Docker images..."
            sudo docker pull $FRONTEND_IMAGE

            echo "Stopping old containers..."
            sudo docker stop docushare-frontend || true && sudo docker rm docushare-frontend || true
            sudo docker stop docushare-backend || true && sudo docker rm docushare-backend || true

            # Start the new containers
            echo "Starting Frontend container..."
            sudo docker run -d --name docushare-frontend -p 80:3000 "$FRONTEND_IMAGE"

  deploy-to-private-ec2-backend:
    name: Deploy Backend to Private EC2
    runs-on: ubuntu-latest
    needs: application
    steps:
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Backend to Private EC2
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "i-0a53b19243192bb9a" \
            --comment "Deploy backend container" \
            --parameters 'commands=[
              "if ! command -v docker &> /dev/null; then",
              "  echo Docker not found. Installing Docker...",
              "  sudo yum update -y",
              "  sudo yum install -y docker",
              "  sudo systemctl start docker",
              "  sudo systemctl enable docker",
              "  sudo usermod -aG docker ec2-user",
              "  echo Docker installed successfully.",
              "else",
              "  echo Docker is already installed.",
              "fi",
              "aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 715841365404.dkr.ecr.us-east-2.amazonaws.com",
              "sudo docker pull 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-backend:latest",
              "sudo docker stop docushare-backend || true && docker rm docushare-backend || true",
              "sudo docker run -d --name docushare-backend -p 3001:3001 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-backend:latest"
            ]' \
            --region us-east-2
